/**
 * Añadir el boton eliminar
 * Añadir fomar para guardar los datos en ficheros
 */
package Ventanas;

import Utilidades.ManejoFicheros;
import elementos.Curso;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.NoSuchElementException;
import javax.swing.JOptionPane;

/**
 *
 * @author diego
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Constructo principal
     */
    public Principal() {
        initComponents();
        this.setVisible(true);
    }

    /**
     * Constructor obteniendo los datos
     *
     * @param cursosFichero
     */
    public Principal(ArrayList<Curso> cursosFichero) {
        this.cursos = cursosFichero;
        initComponents();
        for (int i = 0; i < cursos.size(); i++) {
            crearCursosGUI(cursos.get(i));
        }
        this.setVisible(true);
    }

    /**
     * Añadir curso y cursoGUI en los arrayLists o modificar existente
     *
     * @param c
     * @param modificar true modifica un curso existente, false crea de cero
     */
    public void crearCurso(Curso c, boolean modificar) {

        if (modificar) {

            this.jPanel3.remove(cursosGUI.get(punteroCursos));
            cursos.remove(punteroCursos);
            cursosGUI.remove(punteroCursos);
            cursos.add(c);
        } else {
            cursos.add(c);
        }
        this.crearCursosGUI(c);
        this.paintAll(this.getGraphics());
    }

    public void crearCursosGUI(Curso curnew) {
        CursoGUI GUI = new CursoGUI(0, 0, curnew, this);
        cursosGUI.add(GUI);
        this.jPanel3.add(GUI);
        GUI.setVisible(true);
    }

    /**
     * Metodo que guarda el arrayList de cursos en el fichero cursos.txt
     */
    public void guardarDatos() {
        ManejoFicheros.guardar("cursos.obj", cursos);
    }

    /**
     * Comprueba si solo hay un curso selecionado PunteroCursos se coloca en el
     * ultimo curso selecionado
     *
     * @return verdadero si solo hay un curso selecionado y falso si no hay
     * ninguno o hay varios
     */
    private boolean soloUnCursoSelecionado() {
        Iterator n = cursosGUI.iterator();
        int i = 0;
        int cont = -1;
        do {
            cont++;
            CursoGUI c = (CursoGUI) n.next();
            if (c.isSelecionado()) {
                i++;
                punteroCursos = cont;
            }
        } while (n.hasNext());
        return i == 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 153));

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton1.setText("Modificar ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton3.setText("Crear ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 36)); // NOI18N
        jLabel1.setText("Cursos");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jButton4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Boton crear
     *
     * @param evt
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CrearCurso cur = new CrearCurso(this);
        this.setVisible(false);
        cur.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * Boton eliminar
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ArrayList<Curso> elimiCur = new ArrayList();
        ArrayList<CursoGUI> elimiCurGUI = new ArrayList();
        String[] ops = {"Si", "No"};

        for (int i = 0; i < cursos.size(); i++) {
            Curso cur = cursos.get(i);
            CursoGUI curGUI = cursosGUI.get(i);

            if (cursosGUI.get(i).isSelecionado()) {
                elimiCur.add(cur);
                elimiCurGUI.add(curGUI);
            }

        }
        if (elimiCur.isEmpty()) {
            JOptionPane.showMessageDialog(null, "DEBE SELECIONAR UN CURSO", "ERROR", JOptionPane.ERROR_MESSAGE);

        } else if (0 == JOptionPane.showOptionDialog(rootPane, "¿ ESTAS SEGURO DE QUE DESEAS ELIMINAR LOS DATOS ?  ",
                "ELIMINAR DATOS:", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, ops, 2)) {
            for (int i = 0; i < elimiCur.size(); i++) {
                this.jPanel3.remove(elimiCurGUI.get(i));
                cursos.remove(elimiCur.get(i));
                cursosGUI.remove(elimiCurGUI.get(i));
            }

            this.paintAll(this.getGraphics());

        }
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Boton modificar Validar que hay algun cursos selecionando o no mas de uno
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (soloUnCursoSelecionado()) {
                CrearCurso cur = new CrearCurso(this, cursos.get(punteroCursos).getClon()); //Dado que solo hay un curso selecionado punteroCurso apunta al curso selecionado
                this.setVisible(false);
                cur.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "DEBE SELECIONAR UN CURSO", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NoSuchElementException e) {
            JOptionPane.showMessageDialog(null, "PRIMERO TIENES QUE CREAR ALMENOS UN CURSO",
                    "ERROR", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Boton salir crea una ventana con opciones para guardar los datos o no
     *
     * @param evt
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String[] ops = {"Si", "No", "Cancelar"};
        int op = JOptionPane.showOptionDialog(rootPane, "¿ QUIERES GUARDAR LOS DATOS ?  ",
                "GUARDAR DATOS", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, ops, 3);
        switch (op) {
            case 0:
                this.guardarDatos();    //Salir y guardar los datos
                System.exit(0);
                break;
            case 1:
                this.dispose();     //Salir y no guardar los datos
                System.exit(0);
                break;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private ArrayList<Curso> cursos = new ArrayList();
    private ArrayList<CursoGUI> cursosGUI = new ArrayList();

    private int punteroCursos = -1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
